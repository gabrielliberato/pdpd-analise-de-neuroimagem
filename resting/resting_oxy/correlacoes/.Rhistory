heatmap(x = mydata.rcorr$r, col = palette, symm = TRUE)
palette = colorRampPalette(c("white", "red"))(20)
heatmap(x = mydata.rcorr$r, col = palette, symm = TRUE)
palette = colorRampPalette(c("yellow", "white", "red"))(20)
heatmap(x = mydata.rcorr$r, col = palette, symm = TRUE)
palette = colorRampPalette(c("yellow", "white", "red"))(256)
heatmap(x = mydata.rcorr$r, col = palette, symm = TRUE)
palette = colorRampPalette(c("yellow", "white", "red"))(1000)
heatmap(x = mydata.rcorr$r, col = palette, symm = TRUE)
palette = colorRampPalette(c("red", "orange", "yellow"))(299)
heatmap(x = mydata.rcorr$r, col = palette, symm = TRUE)
palette = colorRampPalette(c("yellow", "orange", "red"))(299)
heatmap(x = mydata.rcorr$r, col = palette, symm = TRUE)
heatmap.2(mydata.rcorr$r,
cellnote = mydata.rcorr$r,  # same data set for cell labels
main = "Correlation", # heat map title
notecol="black",      # change font color of cell labels to black
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
margins =c(12,9),     # widens margins around plot
col=palette,       # use on color palette defined earlier
dendrogram="row",     # only draw a row dendrogram
Colv="NA")
heatmap(mydata.rcorr$r,
cellnote = mydata.rcorr$r,  # same data set for cell labels
main = "Correlation", # heat map title
notecol="black",      # change font color of cell labels to black
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
margins =c(12,9),     # widens margins around plot
col=palette,       # use on color palette defined earlier
dendrogram="row",     # only draw a row dendrogram
Colv="NA")
heatmap(mydata.rcorr$r,
cellnote = mydata.rcorr$r,  # same data set for cell labels
main = "Correlation", # heat map title
notecol="black",      # change font color of cell labels to black
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
margins =c(12,9),     # widens margins around plot
col=palette,       # use on color palette defined earlier
Colv="NA")
if (!require("gplots")) {
install.packages("gplots", dependencies = TRUE)
library(gplots)
}
if (!require("RColorBrewer")) {
install.packages("RColorBrewer", dependencies = TRUE)
library(RColorBrewer)
}
heatmap.2(mydata.rcorr$r,
cellnote = mydata.rcorr$r,  # same data set for cell labels
main = "Correlation", # heat map title
notecol="black",      # change font color of cell labels to black
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
margins =c(12,9),     # widens margins around plot
col=palette,
dendrogram="row",     # only draw a row dendrogram
Colv="NA")
heatmap.2(mydata.rcorr$r,
cellnote = mydata.rcorr$r,  # same data set for cell labels
main = "Correlation", # heat map title
notecol="black",      # change font color of cell labels to black
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
margins =c(5,5),     # widens margins around plot
col=palette,
dendrogram="row",     # only draw a row dendrogram
Colv="NA")
heatmap.2(mydata.rcorr$r,
cellnote = mydata.rcorr$r,  # same data set for cell labels
main = "Correlation", # heat map title
notecol="black",      # change font color of cell labels to black
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
col=palette,
dendrogram="row",     # only draw a row dendrogram
Colv="NA")
heatmap(x = mydata.rcorr$r, col = palette, symm = TRUE)
palette = colorRampPalette(c("yellow", "orange", "red"))(299)
heatmap(x = mydata.rcorr$r, col = palette, symm = TRUE)
heatmap(x = mydata.rcorr$r, col = palette, symm = TRUE)
palette = colorRampPalette(c("yellow", "orange", "red"))(299)
heatmap(x = mydata.rcorr$r, col = palette, symm = TRUE)
corrplot(mydata.rcorr$r)
palette = colorRampPalette(c("yellow", "orange", "red"))(299)
heatmap(x = mydata.rcorr$r, col = palette, symm = TRUE)
heatmap(x = mydata.rcorr$r, col = palette, symm = FALSE)
heatmap(x = mydata.rcorr$r, col = palette, symm = TRUE)
heatmap(x = mydata.rcorr$r, col = palette, symm = TRUE, main = "Correlation matrix")
mydata.rcorr = rcorr(as.matrix(voluntario1), test=cor.test)
mydata.rcorr = cor.matrix(voluntario1,with.variables,test=cor.test)
install.packages("Deducer")
library("Deducer")
install.packages("Deducer")
install.packages("Deducer")
library("Deducer")
mydata.rcorr = cor.matrix(voluntario1,with.variables,test=cor.test)
mydata.rcorr$P
View(mydata.rcorr$P)
View(mydata.rcorr$n)
corrplot(mydata.rcorr$r)
library(corrplot)
corrplot(mydata.rcorr$r)
corrplot(mydata.rcorr$r, method="color")
corrplot(mydata.rcorr$r, method="color", col=palette)
corrplot(mydata.rcorr$r, method="color", col=palette, title="Correlation matrix")
#Limpar o ambiente
rm(list = ls())
#Ler os arquivos
setwd("C:/Users/Bruno/Documents/Experimento/pupil/Time")
Time1=read.table("Time-Beatriz.txt", header=FALSE, sep=";")
Time2=read.table("Time-Bianca.txt", header=FALSE, sep=";")
Time3=read.table("Time-Bianca_2.txt", header=FALSE, sep=";")
Time4=read.table("Time-Carlinha.txt", header=FALSE, sep=";")
Time5=read.table("Time-Gabi.txt", header=FALSE, sep=";")
Time6=read.table("Time-Gabriel_gomes.txt", header=FALSE, sep=";")
Time7=read.table("Time-Gabriela.txt", header=FALSE, sep=";")
Time8=read.table("Time-Gustavo.txt", header=FALSE, sep=";")
Time9=read.table("Time-Janine.txt", header=FALSE, sep=";")
Time10=read.table("Time-Laira.txt", header=FALSE, sep=";")
Time11=read.table("Time-Maria.txt", header=FALSE, sep=";")
Time12=read.table("Time-Matheus.txt", header=FALSE, sep=";")
Time13=read.table("Time-Michael.txt", header=FALSE, sep=";")
Time14=read.table("Time-Miguel.txt", header=FALSE, sep=";")
#Time15=read.table("Time-Nathalia.txt", header=FALSE, sep=";") Problemas com os timestamps
Time16=read.table("Time-Picolli.txt", header=FALSE, sep=";")
Time17=read.table("Time-Thales.txt", header=FALSE, sep=";")
Time18=read.table("Time-Tulio.txt", header=FALSE, sep=";")
Time19=read.table("Time-Victor.txt", header=FALSE, sep=";")
Time20=read.table("Time-Victor_hugo.txt", header=FALSE, sep=";")
#Time21=read.table("Time-Vinicius.txt", header=FALSE, sep=";") Problemas com os timestamps
Time22=read.table("Time-Gabriel_rossi.txt", header=FALSE, sep=";")
Time23=read.table("Time-Gabriel_sgarbi.txt", header=FALSE, sep=";")
Time24=read.table("Time-Fabricio.txt", header=FALSE, sep=";")
Time25=read.table("Time-Gabi_zanini.txt", header=FALSE, sep=";")
#Calculando a soma dos valores em segundos
for(i in 1:nrow(Time1)){
Time1[i,4]=(Time1[i,1])*3600 + (Time1[i,2])*60 + Time1[i,3]
}
for(i in 1:nrow(Time2)){
Time2[i,4]=(Time2[i,1])*3600 + (Time2[i,2])*60 + Time2[i,3]
}
for(i in 1:nrow(Time3)){
Time3[i,4]=(Time3[i,1])*3600 + (Time3[i,2])*60 + Time3[i,3]
}
for(i in 1:nrow(Time4)){
Time4[i,4]=(Time4[i,1])*3600 + (Time4[i,2])*60 + Time4[i,3]
}
for(i in 1:nrow(Time5)){
Time5[i,4]=(Time5[i,1])*3600 + (Time5[i,2])*60 + Time5[i,3]
}
for(i in 1:nrow(Time6)){
Time6[i,4]=(Time6[i,1])*3600 + (Time6[i,2])*60 + Time6[i,3]
}
for(i in 1:nrow(Time7)){
Time7[i,4]=(Time7[i,1])*3600 + (Time7[i,2])*60 + Time7[i,3]
}
for(i in 1:nrow(Time8)){
Time8[i,4]=(Time8[i,1])*3600 + (Time8[i,2])*60 + Time8[i,3]
}
for(i in 1:nrow(Time9)){
Time9[i,4]=(Time9[i,1])*3600 + (Time9[i,2])*60 + Time9[i,3]
}
for(i in 1:nrow(Time10)){
Time10[i,4]=(Time10[i,1])*3600 + (Time10[i,2])*60 + Time10[i,3]
}
for(i in 1:nrow(Time11)){
Time11[i,4]=(Time11[i,1])*3600 + (Time11[i,2])*60 + Time11[i,3]
}
for(i in 1:nrow(Time12)){
Time12[i,4]=(Time12[i,1])*3600 + (Time12[i,2])*60 + Time12[i,3]
}
for(i in 1:nrow(Time13)){
Time13[i,4]=(Time13[i,1])*3600 + (Time13[i,2])*60 + Time13[i,3]
}
for(i in 1:nrow(Time14)){
Time14[i,4]=(Time14[i,1])*3600 + (Time14[i,2])*60 + Time14[i,3]
}
#for(i in 1:nrow(Time15)){
Time15[i,4]=(Time15[i,1])*3600 + (Time15[i,2])*60 + Time15[i,3]
}
for(i in 1:nrow(Time16)){
Time16[i,4]=(Time16[i,1])*3600 + (Time16[i,2])*60 + Time16[i,3]
}
for(i in 1:nrow(Time17)){
Time17[i,4]=(Time17[i,1])*3600 + (Time17[i,2])*60 + Time17[i,3]
}
for(i in 1:nrow(Time18)){
Time18[i,4]=(Time18[i,1])*3600 + (Time18[i,2])*60 + Time18[i,3]
}
for(i in 1:nrow(Time19)){
Time19[i,4]=(Time19[i,1])*3600 + (Time19[i,2])*60 + Time19[i,3]
}
for(i in 1:nrow(Time20)){
Time20[i,4]=(Time20[i,1])*3600 + (Time20[i,2])*60 + Time20[i,3]
}
#for(i in 1:nrow(Time21)){
Time21[i,4]=(Time21[i,1])*3600 + (Time21[i,2])*60 + Time21[i,3]
}
for(i in 1:nrow(Time22)){
Time22[i,4]=(Time22[i,1])*3600 + (Time22[i,2])*60 + Time22[i,3]
}
for(i in 1:nrow(Time23)){
Time23[i,4]=(Time23[i,1])*3600 + (Time23[i,2])*60 + Time23[i,3]
}
for(i in 1:nrow(Time24)){
Time24[i,4]=(Time24[i,1])*3600 + (Time24[i,2])*60 + Time24[i,3]
}
for(i in 1:nrow(Time25)){
Time25[i,4]=(Time25[i,1])*3600 + (Time25[i,2])*60 + Time25[i,3]
}
########################################################
#Calculando a diferen√ßa de tempo entre os instantes e armazenando isso numa matriz
T1=matrix(NA,nrow(Time1),2)
for(i in 1:(nrow(T1)-1)){
T1[i,1]=Time1[(i+1),4]-Time1[i,4]
T1[i,1]=round(T1[i,1], digits=4)
}
T2=matrix(NA,nrow(Time2),2)
for(i in 1:(nrow(T2)-1)){
T2[i,1]=Time2[(i+1),4]-Time2[i,4]
T2[i,1]=round(T2[i,1], digits=4)
}
T3=matrix(NA,nrow(Time3),2)
for(i in 1:(nrow(T3)-1)){
T3[i,1]=Time3[(i+1),4]-Time3[i,4]
T3[i,1]=round(T3[i,1], digits=4)
}
T4=matrix(NA,nrow(Time4),2)
for(i in 1:(nrow(T4)-1)){
T4[i,1]=Time4[(i+1),4]-Time4[i,4]
T4[i,1]=round(T4[i,1], digits=4)
}
T5=matrix(NA,nrow(Time5),2)
for(i in 1:(nrow(T5)-1)){
T5[i,1]=Time5[(i+1),4]-Time5[i,4]
T5[i,1]=round(T5[i,1], digits=4)
}
T6=matrix(NA,nrow(Time6),2)
for(i in 1:(nrow(T6)-1)){
T6[i,1]=Time6[(i+1),4]-Time6[i,4]
T6[i,1]=round(T6[i,1], digits=4)
}
T7=matrix(NA,nrow(Time7),2)
for(i in 1:(nrow(T7)-1)){
T7[i,1]=Time7[(i+1),4]-Time7[i,4]
T7[i,1]=round(T7[i,1], digits=4)
}
T8=matrix(NA,nrow(Time8),2)
for(i in 1:(nrow(T8)-1)){
T8[i,1]=Time8[(i+1),4]-Time8[i,4]
T8[i,1]=round(T8[i,1], digits=4)
}
T9=matrix(NA,nrow(Time9),2)
for(i in 1:(nrow(T9)-1)){
T9[i,1]=Time9[(i+1),4]-Time9[i,4]
T9[i,1]=round(T9[i,1], digits=4)
}
T10=matrix(NA,nrow(Time10),2)
for(i in 1:(nrow(T10)-1)){
T10[i,1]=Time10[(i+1),4]-Time10[i,4]
T10[i,1]=round(T10[i,1], digits=4)
}
T11=matrix(NA,nrow(Time11),2)
for(i in 1:(nrow(T11)-1)){
T11[i,1]=Time11[(i+1),4]-Time11[i,4]
T11[i,1]=round(T11[i,1], digits=4)
}
T12=matrix(NA,nrow(Time12),2)
for(i in 1:(nrow(T12)-1)){
T12[i,1]=Time12[(i+1),4]-Time12[i,4]
T12[i,1]=round(T12[i,1], digits=4)
}
T13=matrix(NA,nrow(Time13),2)
for(i in 1:(nrow(T13)-1)){
T13[i,1]=Time13[(i+1),4]-Time13[i,4]
T13[i,1]=round(T13[i,1], digits=4)
}
T14=matrix(NA,nrow(Time14),2)
for(i in 1:(nrow(T14)-1)){
T14[i,1]=Time14[(i+1),4]-Time14[i,4]
T14[i,1]=round(T14[i,1], digits=4)
}
#T15=matrix(NA,nrow(Time15),2)
#for(i in 1:(nrow(T15)-1)){
T15[i,1]=Time15[(i+1),4]-Time15[i,4]
T15[i,1]=round(T15[i,1], digits=4)
}
T16=matrix(NA,nrow(Time16),2)
for(i in 1:(nrow(T16)-1)){
T16[i,1]=Time16[(i+1),4]-Time16[i,4]
T16[i,1]=round(T16[i,1], digits=4)
}
T17=matrix(NA,nrow(Time17),2)
for(i in 1:(nrow(T17)-1)){
T17[i,1]=Time17[(i+1),4]-Time17[i,4]
T17[i,1]=round(T17[i,1], digits=4)
}
T18=matrix(NA,nrow(Time18),2)
for(i in 1:(nrow(T18)-1)){
T18[i,1]=Time18[(i+1),4]-Time18[i,4]
T18[i,1]=round(T18[i,1], digits=4)
}
T19=matrix(NA,nrow(Time19),2)
for(i in 1:(nrow(T19)-1)){
T19[i,1]=Time19[(i+1),4]-Time19[i,4]
T19[i,1]=round(T19[i,1], digits=4)
}
T20=matrix(NA,nrow(Time20),2)
for(i in 1:(nrow(T20)-1)){
T20[i,1]=Time20[(i+1),4]-Time20[i,4]
T20[i,1]=round(T20[i,1], digits=4)
}
#T21=matrix(NA,nrow(Time21),2)
#for(i in 1:(nrow(T21)-1)){
T21[i,1]=Time21[(i+1),4]-Time21[i,4]
T21[i,1]=round(T21[i,1], digits=4)
}
T22=matrix(NA,nrow(Time22),2)
for(i in 1:(nrow(T22)-1)){
T22[i,1]=Time22[(i+1),4]-Time22[i,4]
T22[i,1]=round(T22[i,1], digits=4)
}
T23=matrix(NA,nrow(Time23),2)
for(i in 1:(nrow(T23)-1)){
T23[i,1]=Time23[(i+1),4]-Time23[i,4]
T23[i,1]=round(T23[i,1], digits=4)
}
T24=matrix(NA,nrow(Time24),2)
for(i in 1:(nrow(T24)-1)){
T24[i,1]=Time24[(i+1),4]-Time24[i,4]
T24[i,1]=round(T24[i,1], digits=4)
}
T25=matrix(NA,nrow(Time25),2)
for(i in 1:(nrow(T25)-1)){
T25[i,1]=Time25[(i+1),4]-Time25[i,4]
T25[i,1]=round(T25[i,1], digits=4)
}
####################################################
#Preencher a segunda coluna das matrizes T considerando-se que o √∫ltimo instante de todos vale 610s
### T1
b=nrow(T1)
T1[(nrow(T1)),2]=600
for(i in 1:(b-1)){
T1[(nrow(T1)-i),2]=T1[(nrow(T1)-(i-1)),2]-T1[(nrow(T1)-i),1]
}
### T2
b=nrow(T2)
T2[(nrow(T2)),2]=610
for(i in 1:(b-1)){
T2[(nrow(T2)-i),2]=T2[(nrow(T2)-(i-1)),2]-T2[(nrow(T2)-i),1]
}
### T3
b=nrow(T3)
T3[(nrow(T3)),2]=610
for(i in 1:(b-1)){
T3[(nrow(T3)-i),2]=T3[(nrow(T3)-(i-1)),2]-T3[(nrow(T3)-i),1]
}
### T4
b=nrow(T4)
T4[(nrow(T4)),2]=610
for(i in 1:(b-1)){
T4[(nrow(T4)-i),2]=T4[(nrow(T4)-(i-1)),2]-T4[(nrow(T4)-i),1]
}
### T5
b=nrow(T5)
T5[(nrow(T5)),2]=610
for(i in 1:(b-1)){
T5[(nrow(T5)-i),2]=T5[(nrow(T5)-(i-1)),2]-T5[(nrow(T5)-i),1]
}
### T6
b=nrow(T6)
T6[(nrow(T6)),2]=610
for(i in 1:(b-1)){
T6[(nrow(T6)-i),2]=T6[(nrow(T6)-(i-1)),2]-T6[(nrow(T6)-i),1]
}
### T7
b=nrow(T7)
T7[(nrow(T7)),2]=610
for(i in 1:(b-1)){
T7[(nrow(T7)-i),2]=T7[(nrow(T7)-(i-1)),2]-T7[(nrow(T7)-i),1]
}
### T8
b=nrow(T8)
T8[(nrow(T8)),2]=610
for(i in 1:(b-1)){
T8[(nrow(T8)-i),2]=T8[(nrow(T8)-(i-1)),2]-T8[(nrow(T8)-i),1]
}
### T9
b=nrow(T9)
T9[(nrow(T9)),2]=610
for(i in 1:(b-1)){
T9[(nrow(T9)-i),2]=T9[(nrow(T9)-(i-1)),2]-T9[(nrow(T9)-i),1]
}
### T10
b=nrow(T10)
T10[(nrow(T10)),2]=600
for(i in 1:(b-1)){
T10[(nrow(T10)-i),2]=T10[(nrow(T10)-(i-1)),2]-T10[(nrow(T10)-i),1]
}
### T11
b=nrow(T11)
T11[(nrow(T11)),2]=610
for(i in 1:(b-1)){
T11[(nrow(T11)-i),2]=T11[(nrow(T11)-(i-1)),2]-T11[(nrow(T11)-i),1]
}
### T12
b=nrow(T12)
T12[(nrow(T12)),2]=610
for(i in 1:(b-1)){
T12[(nrow(T12)-i),2]=T12[(nrow(T12)-(i-1)),2]-T12[(nrow(T12)-i),1]
}
### T13
b=nrow(T13)
T13[(nrow(T13)),2]=610
for(i in 1:(b-1)){
T13[(nrow(T13)-i),2]=T13[(nrow(T13)-(i-1)),2]-T13[(nrow(T13)-i),1]
}
### T14
b=nrow(T14)
T14[(nrow(T14)),2]=610
for(i in 1:(b-1)){
T14[(nrow(T14)-i),2]=T14[(nrow(T14)-(i-1)),2]-T14[(nrow(T14)-i),1]
}
### T15
#b=nrow(T15)
#T15[(nrow(T15)),2]=610
#for(i in 1:(b-1)){
T15[(nrow(T15)-i),2]=T15[(nrow(T15)-(i-1)),2]-T15[(nrow(T15)-i),1]
}
### T16
b=nrow(T16)
T16[(nrow(T16)),2]=610
for(i in 1:(b-1)){
T16[(nrow(T16)-i),2]=T16[(nrow(T16)-(i-1)),2]-T16[(nrow(T16)-i),1]
}
### T17
b=nrow(T17)
T17[(nrow(T17)),2]=610
for(i in 1:(b-1)){
T17[(nrow(T17)-i),2]=T17[(nrow(T17)-(i-1)),2]-T17[(nrow(T17)-i),1]
}
### T18
b=nrow(T18)
T18[(nrow(T18)),2]=610
for(i in 1:(b-1)){
T18[(nrow(T18)-i),2]=T18[(nrow(T18)-(i-1)),2]-T18[(nrow(T18)-i),1]
}
### T19
b=nrow(T19)
T19[(nrow(T19)),2]=610
for(i in 1:(b-1)){
T19[(nrow(T19)-i),2]=T19[(nrow(T19)-(i-1)),2]-T19[(nrow(T19)-i),1]
}
### T20
b=nrow(T20)
T20[(nrow(T20)),2]=610
for(i in 1:(b-1)){
T20[(nrow(T20)-i),2]=T20[(nrow(T20)-(i-1)),2]-T20[(nrow(T20)-i),1]
}
### T21
#b=nrow(T21)
#T21[(nrow(T21)),2]=610
#for(i in 1:(b-1)){
T21[(nrow(T21)-i),2]=T21[(nrow(T21)-(i-1)),2]-T21[(nrow(T21)-i),1]
}
### T22
b=nrow(T22)
T22[(nrow(T22)),2]=610
for(i in 1:(b-1)){
T22[(nrow(T22)-i),2]=T22[(nrow(T22)-(i-1)),2]-T22[(nrow(T22)-i),1]
}
### T23
b=nrow(T23)
T23[(nrow(T23)),2]=610
for(i in 1:(b-1)){
T23[(nrow(T23)-i),2]=T23[(nrow(T23)-(i-1)),2]-T23[(nrow(T23)-i),1]
}
### T24
b=nrow(T24)
T24[(nrow(T24)),2]=610
for(i in 1:(b-1)){
T24[(nrow(T24)-i),2]=T24[(nrow(T24)-(i-1)),2]-T24[(nrow(T24)-i),1]
}
### T25
b=nrow(T25)
T25[(nrow(T25)),2]=610
for(i in 1:(b-1)){
T25[(nrow(T25)-i),2]=T25[(nrow(T25)-(i-1)),2]-T25[(nrow(T25)-i),1]
}
###############################################################################################
library(dplyr)
library(tidyr)
library( ggplot2)
library(gridExtra)
library(knitr)
library(corrplot)
#Testando com um volunt√°rio s√≥
setwd("C:/Users/Bruno/Documents/Experimento/nirs/dados_bruno/nirx/Resting/resting_oxy")
file_list <- list.files(path='C:/Users/Bruno/Documents/Experimento/nirs/dados_bruno/nirx/Resting/resting_oxy', pattern = "\\.txt$")
voluntario1 <- data.frame()
voluntario1 <- read.table(file_list[1])
names(voluntario1) <- as.numeric(c(1:42))
voluntario1 <- mutate(voluntario1, frame=c(1:nrow(voluntario1)))
library("tidyr", lib.loc="~/R/win-library/3.5")
install.packages("rlang")
library(dplyr)
library(dplyr)
install.packages("dplyr")
voluntario1 <- mutate(voluntario1, frame=c(1:nrow(voluntario1)))
